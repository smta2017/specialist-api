{
    "swagger": "2.0",
    "info": {
        "title": "Specialist APP APIs",
        "version": "1.0.0"
    },
    "basePath": "/api/en/v1",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/areas": {
            "get": {
                "tags": [
                    "Area"
                ],
                "summary": "Get a listing of the Areas.",
                "description": "Get all Areas",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Area"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Area"
                ],
                "summary": "Store a newly created Area in storage",
                "description": "Store Area",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Area that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Area"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Area"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/areas/{id}": {
            "get": {
                "tags": [
                    "Area"
                ],
                "summary": "Display the specified Area",
                "description": "Get Area",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Area",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Area"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Area"
                ],
                "summary": "Update the specified Area in storage",
                "description": "Update Area",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Area",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Area that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Area"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Area"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Area"
                ],
                "summary": "Remove the specified Area from storage",
                "description": "Delete Area",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Area",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "description": "the system users login",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CustomerAddress that should be updated",
                        "required": false,
                        "schema": {
                            "example": {
                                "email": "sameh@test.com",
                                "password": "password"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "description": "the system users login",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CustomerAddress that should be updated",
                        "required": false,
                        "schema": {
                            "example": {
                                "name": "sameh",
                                "email": "sameh@test.com",
                                "phone": "01274200778",
                                "password": "password",
                                "firebase_token": "2986tGfr56hb5tg6r6f6",
                                "user_type_id": 2,
                                "areas": [
                                    2,
                                    5,
                                    1
                                ],
                                "specials": [
                                    3,
                                    1,
                                    2
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "description": "get user info",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "send user reset password email",
                "description": "the system users login",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CustomerAddress that should be updated",
                        "required": false,
                        "schema": {
                            "example": {
                                "email": "esteban55@example.com"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/facebook/login": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "login using facebook",
                "description": "the system users login",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "login using google",
                "description": "the system users login",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "get the url to login with google.",
                                    "type": "boolean"
                                },
                                "data": {
                                    "description": "get the url to login with google.",
                                    "type": "string"
                                },
                                "message": {
                                    "description": "get the url to login with google.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/verify/send-otp/{phone_number}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Display the specified Subscription",
                "description": "Send OTP phone verification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "path",
                        "description": "phone to send OTP code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "send phone OTP.",
                                    "type": "boolean"
                                },
                                "data": {
                                    "description": "send phone OTP.",
                                    "$ref": "#"
                                },
                                "message": {
                                    "description": "send phone OTP.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/verify/confirm-otp/{phone_number}/{otp}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Display the specified Subscription",
                "description": "Verify OTP code",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "path",
                        "description": "Verify OTP code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "otp",
                        "in": "path",
                        "description": "OTP code to verify",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "verify phone OTP.",
                                    "type": "boolean"
                                },
                                "data": {
                                    "description": "verify phone OTP.",
                                    "$ref": "#"
                                },
                                "message": {
                                    "description": "verify phone OTP.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get a listing of the Cities.",
                "description": "Get all Cities",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/City"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Store a newly created City in storage",
                "description": "Store City",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "City that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/City"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Display the specified City",
                "description": "Get City",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/City"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update the specified City in storage",
                "description": "Update City",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "City that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/City"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Remove the specified City from storage",
                "description": "Delete City",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get a listing of the Countries.",
                "description": "Get all Countries",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Country"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Store a newly created Country in storage",
                "description": "Store Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Country that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/countries/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Display the specified Country",
                "description": "Get Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update the specified Country in storage",
                "description": "Update Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Country that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Remove the specified Country from storage",
                "description": "Delete Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/customerAddresses": {
            "get": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Get a listing of the CustomerAddresses.",
                "description": "Get all CustomerAddresses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomerAddress"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Store a newly created CustomerAddress in storage",
                "description": "Store CustomerAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CustomerAddress that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CustomerAddress"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/customerAddresses/{id}": {
            "get": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Display the specified CustomerAddress",
                "description": "Get CustomerAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CustomerAddress",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CustomerAddress"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Update the specified CustomerAddress in storage",
                "description": "Update CustomerAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CustomerAddress",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CustomerAddress that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CustomerAddress"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Remove the specified CustomerAddress from storage",
                "description": "Delete CustomerAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CustomerAddress",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/customerAddresses/default/{id}": {
            "put": {
                "tags": [
                    "CustomerAddress"
                ],
                "summary": "Set address as default",
                "description": "Delete CustomerAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CustomerAddress",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get a listing of the Orders.",
                "description": "Get all Orders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "order_status_id",
                        "in": "query",
                        "description": "id of Order status",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Store a newly created Order in storage",
                "description": "Store Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Order that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Display the specified Order",
                "description": "Get Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update the specified Order in storage",
                "description": "Update Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Order that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Remove the specified Order from storage",
                "description": "Delete Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders/complete/{id}": {
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update status order to complete",
                "description": "complete order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CustomerAddress",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders/detail/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Display  Order Detail (specified or customer) ",
                "description": "Get details of Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orders/sp": {
            "post": {
                "tags": [
                    "Order-Specialist"
                ],
                "summary": "Get SPECIALIST listing of the Orders.",
                "description": "Get all Orders",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Order that should be stored",
                        "required": false,
                        "schema": {
                            "example": {
                                "special_type_id": [
                                    4,
                                    7
                                ],
                                "area_id": [
                                    1,
                                    3
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orderComments": {
            "get": {
                "tags": [
                    "OrderComment"
                ],
                "summary": "Get a listing of the OrderComments.",
                "description": "Get all OrderComments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrderComment"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderComment"
                ],
                "summary": "Store a newly created OrderComment in storage",
                "description": "Store OrderComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "OrderComment that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderComment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orderComments/{id}": {
            "get": {
                "tags": [
                    "OrderComment"
                ],
                "summary": "Display the specified OrderComment",
                "description": "Get OrderComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderComment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderComment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderComment"
                ],
                "summary": "Update the specified OrderComment in storage",
                "description": "Update OrderComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderComment",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "OrderComment that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderComment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderComment"
                ],
                "summary": "Remove the specified OrderComment from storage",
                "description": "Delete OrderComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderComment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orderStates": {
            "get": {
                "tags": [
                    "OrderState"
                ],
                "summary": "Get a listing of the OrderStates.",
                "description": "Get all OrderStates",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrderState"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderState"
                ],
                "summary": "Store a newly created OrderState in storage",
                "description": "Store OrderState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "OrderState that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/orderStates/{id}": {
            "get": {
                "tags": [
                    "OrderState"
                ],
                "summary": "Display the specified OrderState",
                "description": "Get OrderState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderState",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderState"
                ],
                "summary": "Update the specified OrderState in storage",
                "description": "Update OrderState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderState",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "OrderState that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/OrderState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderState"
                ],
                "summary": "Remove the specified OrderState from storage",
                "description": "Delete OrderState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of OrderState",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/plans": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "Get a listing of the Plans.",
                "description": "Get all Plans",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Plan"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Plan"
                ],
                "summary": "Store a newly created Plan in storage",
                "description": "Store Plan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Plan that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Plan"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/plans/{id}": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "Display the specified Plan",
                "description": "Get Plan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Plan",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Plan"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Plan"
                ],
                "summary": "Update the specified Plan in storage",
                "description": "Update Plan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Plan",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Plan that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Plan"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Plan"
                ],
                "summary": "Remove the specified Plan from storage",
                "description": "Delete Plan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "id of Plan",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/plan/specialist": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "get user subscripe",
                "description": "Get Current user Plan",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/plans/user": {
            "get": {
                "tags": [
                    "Plan"
                ],
                "summary": "get auth avilable plans",
                "description": "Get Current user Plan",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/user/rate/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user Rate.",
                "description": "Get all Plans",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the Plans.",
                "description": "Get all Plans",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Plan that should be updated",
                        "required": false,
                        "schema": {
                            "example": {
                                "title": "This is a test title",
                                "body": "And we will add some shit here",
                                "rating": "5",
                                "recommend": "Yes"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/user/rate/{user_id}/{rate_id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "update user rate.",
                "description": "update user rate.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "user id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "rate_id",
                        "in": "path",
                        "description": "Rate id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": false,
                        "schema": {
                            "example": {
                                "title": "This is a test title",
                                "body": "And we will add some shit here",
                                "rating": "5",
                                "recommend": "Yes"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/sliders": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Get a listing of the Sliders.",
                "description": "Get all Sliders",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Slider"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Slider"
                ],
                "summary": "Store a newly created Slider in storage",
                "description": "Store Slider",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Slider that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Slider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Slider"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sliders/{id}": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Display the specified Slider",
                "description": "Get Slider",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Slider",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Slider"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Slider"
                ],
                "summary": "Update the specified Slider in storage",
                "description": "Update Slider",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Slider",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Slider that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Slider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Slider"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Slider"
                ],
                "summary": "Remove the specified Slider from storage",
                "description": "Delete Slider",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Slider",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sliderDetails/{slider_id}": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Display the specified Slider with details",
                "description": "Get Slider",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "slider_id",
                        "in": "path",
                        "description": "id of Slider",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Slider"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sliderImages": {
            "get": {
                "tags": [
                    "SliderImage"
                ],
                "summary": "Get a listing of the SliderImages.",
                "description": "Get all SliderImages",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SliderImage"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SliderImage"
                ],
                "summary": "Store a newly created SliderImage in storage",
                "description": "Store SliderImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SliderImage that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SliderImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SliderImage"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sliderImages/{id}": {
            "get": {
                "tags": [
                    "SliderImage"
                ],
                "summary": "Display the specified SliderImage",
                "description": "Get SliderImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SliderImage",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SliderImage"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SliderImage"
                ],
                "summary": "Update the specified SliderImage in storage",
                "description": "Update SliderImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SliderImage",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SliderImage that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SliderImage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SliderImage"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SliderImage"
                ],
                "summary": "Remove the specified SliderImage from storage",
                "description": "Delete SliderImage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SliderImage",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/SpecialType": {
            "get": {
                "tags": [
                    "SpecialType"
                ],
                "summary": "Get a listing of the SpecialType.",
                "description": "Get all SpecialType",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SpecialType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SpecialType"
                ],
                "summary": "Store a newly created SpecialType in storage",
                "description": "Store SpecialType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialType that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/SpecialType/{id}": {
            "get": {
                "tags": [
                    "SpecialType"
                ],
                "summary": "Display the specified SpecialType",
                "description": "Get SpecialType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SpecialType"
                ],
                "summary": "Update the specified SpecialType in storage",
                "description": "Update SpecialType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialType",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialType that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SpecialType"
                ],
                "summary": "Remove the specified SpecialType from storage",
                "description": "Delete SpecialType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/specialistAreas": {
            "get": {
                "tags": [
                    "SpecialistArea"
                ],
                "summary": "Get a listing of the SpecialistAreas.",
                "description": "Get all SpecialistAreas",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SpecialistArea"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SpecialistArea"
                ],
                "summary": "Store a newly created SpecialistArea in storage",
                "description": "Store SpecialistArea",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialistArea that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialistArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistArea"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/specialistAreas/{id}": {
            "get": {
                "tags": [
                    "SpecialistArea"
                ],
                "summary": "Display the specified SpecialistArea",
                "description": "Get SpecialistArea",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistArea",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistArea"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SpecialistArea"
                ],
                "summary": "Update the specified SpecialistArea in storage",
                "description": "Update SpecialistArea",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistArea",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialistArea that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialistArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistArea"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SpecialistArea"
                ],
                "summary": "Remove the specified SpecialistArea from storage",
                "description": "Delete SpecialistArea",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistArea",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/specialistTypes": {
            "get": {
                "tags": [
                    "SpecialistType"
                ],
                "summary": "Get a listing of the SpecialistTypes.",
                "description": "Get all SpecialistTypes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SpecialistType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SpecialistType"
                ],
                "summary": "Store a newly created SpecialistType in storage",
                "description": "Store SpecialistType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialistType that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialistType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/specialistTypes/{id}": {
            "get": {
                "tags": [
                    "SpecialistType"
                ],
                "summary": "Display the specified SpecialistType",
                "description": "Get SpecialistType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SpecialistType"
                ],
                "summary": "Update the specified SpecialistType in storage",
                "description": "Update SpecialistType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistType",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "SpecialistType that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SpecialistType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SpecialistType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SpecialistType"
                ],
                "summary": "Remove the specified SpecialistType from storage",
                "description": "Delete SpecialistType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of SpecialistType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/subscriptions": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get a listing of the Subscriptions.",
                "description": "Get all Subscriptions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Subscription"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Store a newly created Subscription in storage",
                "description": "Store Subscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Subscription that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscription"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Display the specified Subscription",
                "description": "Get Subscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscription",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscription"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Update the specified Subscription in storage",
                "description": "Update Subscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscription",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Subscription that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscription"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Remove the specified Subscription from storage",
                "description": "Delete Subscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscription",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/user-subscribe/{id}": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Add Subscribe for user",
                "description": "create Subscription",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Plan",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscription"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Display the specified Subscription",
                "description": "Verify OTP code",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_type",
                        "in": "query",
                        "description": "user_type_id",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "verify phone OTP.",
                                    "type": "boolean"
                                },
                                "data": {
                                    "description": "verify phone OTP.",
                                    "$ref": "#"
                                },
                                "message": {
                                    "description": "verify phone OTP.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/specialist/{area_id}": {
            "get": {
                "tags": [
                    "Order-Specialist"
                ],
                "summary": "Display the specialist by Area",
                "description": "Get Area",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "area_id",
                        "in": "path",
                        "description": "id of Area",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/userTypes": {
            "get": {
                "tags": [
                    "UserType"
                ],
                "summary": "Get a listing of the UserTypes.",
                "description": "Get all UserTypes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserType"
                ],
                "summary": "Store a newly created UserType in storage",
                "description": "Store UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserType that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/userTypes/{id}": {
            "get": {
                "tags": [
                    "UserType"
                ],
                "summary": "Display the specified UserType",
                "description": "Get UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UserType"
                ],
                "summary": "Update the specified UserType in storage",
                "description": "Update UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "UserType that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/UserType"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserType"
                ],
                "summary": "Remove the specified UserType from storage",
                "description": "Delete UserType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of UserType",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Area": {
            "required": [
                "city_id",
                "area_name_ar",
                "area_name_en"
            ],
            "properties": {
                "city_id": {
                    "description": "city_id",
                    "type": "integer",
                    "format": "int32"
                },
                "area_name_ar": {
                    "description": "area_name_ar",
                    "type": "string"
                },
                "area_name_en": {
                    "description": "area_name_en",
                    "type": "string"
                }
            }
        },
        "City": {
            "required": [
                "city_name_ar",
                "city_name_en",
                "active"
            ],
            "properties": {
                "city_name_ar": {
                    "description": "city_name_ar",
                    "type": "string"
                },
                "city_name_en": {
                    "description": "city_name_en",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "delivery_fees": {
                    "description": "delivery_fees",
                    "type": "number",
                    "format": "number"
                }
            }
        },
        "Country": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CustomerAddress": {
            "required": [
                "user_id",
                "area_id"
            ],
            "properties": {
                "area_id": {
                    "description": "area_id",
                    "type": "integer",
                    "format": "int32"
                },
                "street": {
                    "description": "street",
                    "type": "string"
                },
                "is_default": {
                    "description": "is_default",
                    "type": "boolean",
                    "default": "0"
                },
                "floor_no": {
                    "description": "floor_no",
                    "type": "string"
                },
                "build_no": {
                    "description": "build_no",
                    "type": "string"
                },
                "notes": {
                    "description": "notes",
                    "type": "string"
                }
            }
        },
        "Order": {
            "required": [
                "title",
                "user_id"
            ],
            "properties": {
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "body": {
                    "description": "body",
                    "type": "string"
                },
                "customer_address_id": {
                    "description": "customer_address_id",
                    "type": "integer",
                    "format": "int32"
                },
                "status_id": {
                    "description": "status_id",
                    "type": "string",
                    "default": "new"
                },
                "special_type_id": {
                    "description": "special_type_id",
                    "type": "integer",
                    "default": 1
                }
            }
        },
        "OrderComment": {
            "required": [
                "order_id",
                "user_id",
                "offer"
            ],
            "properties": {
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "body": {
                    "description": "body",
                    "type": "string"
                },
                "offer": {
                    "description": "offer",
                    "type": "number",
                    "format": "number"
                },
                "delivery_date": {
                    "description": "delivery_date",
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "OrderState": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "Plan": {
            "required": [
                "name",
                "price",
                "request_counts"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "request_counts": {
                    "description": "request_counts",
                    "type": "integer",
                    "format": "int32"
                },
                "user_type": {
                    "description": "user_type",
                    "type": "string"
                },
                "can_supscribing_count": {
                    "description": "can_supscribing_count",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Slider": {
            "required": [
                "name",
                "slider_type"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "slider_type": {
                    "description": "slider_type",
                    "type": "string"
                },
                "slides_per_page": {
                    "description": "slides_per_page",
                    "type": "integer",
                    "format": "int32"
                },
                "auto_play": {
                    "description": "auto_play",
                    "type": "integer",
                    "format": "int32"
                },
                "slider_width": {
                    "description": "slider_width",
                    "type": "string"
                },
                "slider_height": {
                    "description": "slider_height",
                    "type": "string"
                },
                "is_active": {
                    "description": "is_active",
                    "type": "boolean"
                }
            }
        },
        "SliderImage": {
            "required": [
                "slider_id"
            ],
            "properties": {
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "caption": {
                    "description": "caption",
                    "type": "string"
                },
                "url": {
                    "description": "url",
                    "type": "string"
                },
                "image_name": {
                    "description": "image_name",
                    "type": "string"
                },
                "start_date": {
                    "description": "start_date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "description": "end_date",
                    "type": "string",
                    "format": "date"
                },
                "is_active": {
                    "description": "is_active",
                    "type": "boolean"
                },
                "slider_id": {
                    "description": "slider_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SpecialType": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SpecialistArea": {
            "required": [
                "user_id",
                "area_id"
            ],
            "properties": {
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SpecialistType": {
            "required": [
                "user_id",
                "special_type_id"
            ],
            "properties": {
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "special_type_id": {
                    "description": "special_type_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Subscription": {
            "required": [
                "user_id",
                "plan_id"
            ],
            "properties": {
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "plan_id": {
                    "description": "plan_id",
                    "type": "integer",
                    "format": "int32"
                },
                "start_at": {
                    "description": "start_at",
                    "type": "string",
                    "format": "date"
                },
                "end_at": {
                    "description": "end_at",
                    "type": "string",
                    "format": "date"
                },
                "order_count": {
                    "description": "order_count",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "UserType": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "description": "Auth Bearer Token\n *      Format as 'Bearer <access_token>'",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "System users Auth"
        },
        {
            "name": "CustomerAddress",
            "description": "Customer Address CRUD"
        },
        {
            "name": "Order",
            "description": "Orders (requests) CRUD"
        },
        {
            "name": "Order-Specialist",
            "description": "Orders for specialist"
        },
        {
            "name": "OrderComment",
            "description": "Order Comments CRUD"
        },
        {
            "name": "City",
            "description": "Cities CRUD"
        }
    ]
}